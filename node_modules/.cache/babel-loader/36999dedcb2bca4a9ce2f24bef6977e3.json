{"remainingRequest":"/Users/weizhibang/work/cloud_vue/node_modules/babel-loader/lib/index.js!/Users/weizhibang/work/cloud_vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/theme.js","dependencies":[{"path":"/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/theme.js","mtime":1538206615119},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/cache-loader/dist/cjs.js","mtime":1538212059547},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/weizhibang/work/cloud_vue/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\n// 设置文件\nimport setting from '@/setting.js';\nexport default {\n  namespaced: true,\n  state: {\n    // 主题\n    list: setting.theme.list,\n    // 现在激活的主题 这应该是一个名字 不是对象\n    activeName: setting.theme.list[0].name\n  },\n  getters: {\n    /**\n     * @description 返回当前的主题信息 不是一个名字 而是当前激活主题的所有数据\n     * @param {Object} state vuex state\n     */\n    activeSetting: function activeSetting(state) {\n      return state.list.find(function (theme) {\n        return theme.name === state.activeName;\n      });\n    }\n  },\n  actions: {\n    /**\n     * @description 激活一个主题\n     * @param {Object} state vuex state\n     * @param {String} themeValue 需要激活的主题名称\n     */\n    set: function set(_ref, themeName) {\n      var state = _ref.state,\n          commit = _ref.commit,\n          dispatch = _ref.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // 检查这个主题在主题列表里是否存在\n                  state.activeName = state.list.find(function (e) {\n                    return e.name === themeName;\n                  }) ? themeName : state.list[0].name; // 将 vuex 中的主题应用到 dom\n\n                  commit('dom'); // 持久化\n\n                  _context.next = 4;\n                  return dispatch('d2admin/db/set', {\n                    dbName: 'sys',\n                    path: 'theme.activeName',\n                    value: state.activeName,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 4:\n                  // end\n                  resolve();\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\n     * @description 从持久化数据加载主题设置\n     * @param {Object} state vuex state\n     */\n    load: function load(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit,\n          dispatch = _ref3.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return dispatch('d2admin/db/get', {\n                    dbName: 'sys',\n                    path: 'theme.activeName',\n                    defaultValue: state.list[0].name,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 2:\n                  state.activeName = _context2.sent;\n                  // 将 vuex 中的主题应用到 dom\n                  commit('dom'); // end\n\n                  resolve();\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  mutations: {\n    /**\n     * @description 将 vuex 中的主题应用到 dom\n     * @param {Object} state vuex state\n     */\n    dom: function dom(state) {\n      document.body.className = \"theme-\".concat(state.activeName);\n    }\n  }\n};",{"version":3,"sources":["/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/theme.js"],"names":["setting","namespaced","state","list","theme","activeName","name","getters","activeSetting","find","actions","set","themeName","commit","dispatch","Promise","resolve","e","dbName","path","value","user","root","load","defaultValue","mutations","dom","document","body","className"],"mappings":";;;;AAAA;AACA,OAAOA,OAAP,MAAoB,cAApB;AAEA,eAAe;AACbC,cAAY,IADC;AAEbC,SAAO;AACL;AACAC,UAAMH,QAAQI,KAAR,CAAcD,IAFf;AAGL;AACAE,gBAAYL,QAAQI,KAAR,CAAcD,IAAd,CAAmB,CAAnB,EAAsBG;AAJ7B,GAFM;AAQbC,WAAS;AACP;;;;AAIAC,iBALO,yBAKQN,KALR,EAKe;AACpB,aAAOA,MAAMC,IAAN,CAAWM,IAAX,CAAgB;AAAA,eAASL,MAAME,IAAN,KAAeJ,MAAMG,UAA9B;AAAA,OAAhB,CAAP;AACD;AAPM,GARI;AAiBbK,WAAS;AACP;;;;;AAKAC,OANO,qBAM2BC,SAN3B,EAMsC;AAAA,UAAtCV,KAAsC,QAAtCA,KAAsC;AAAA,UAA/BW,MAA+B,QAA/BA,MAA+B;AAAA,UAAvBC,QAAuB,QAAvBA,QAAuB;AAC3C,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACjB;AACAd,wBAAMG,UAAN,GAAmBH,MAAMC,IAAN,CAAWM,IAAX,CAAgB;AAAA,2BAAKQ,EAAEX,IAAF,KAAWM,SAAhB;AAAA,mBAAhB,IAA6CA,SAA7C,GAAyDV,MAAMC,IAAN,CAAW,CAAX,EAAcG,IAA1F,CAFiB,CAGjB;;AACAO,yBAAO,KAAP,EAJiB,CAKjB;;AALiB;AAAA,yBAMXC,SAAS,gBAAT,EAA2B;AAC/BI,4BAAQ,KADuB;AAE/BC,0BAAM,kBAFyB;AAG/BC,2BAAOlB,MAAMG,UAHkB;AAI/BgB,0BAAM;AAJyB,mBAA3B,EAKH;AAAEC,0BAAM;AAAR,mBALG,CANW;;AAAA;AAYjB;AACAN;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAeD,KAtBM;;AAuBP;;;;AAIAO,QA3BO,uBA2B4B;AAAA,UAA3BrB,KAA2B,SAA3BA,KAA2B;AAAA,UAApBW,MAAoB,SAApBA,MAAoB;AAAA,UAAZC,QAAY,SAAZA,QAAY;AACjC,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEQF,SAAS,gBAAT,EAA2B;AAClDI,4BAAQ,KAD0C;AAElDC,0BAAM,kBAF4C;AAGlDK,kCAActB,MAAMC,IAAN,CAAW,CAAX,EAAcG,IAHsB;AAIlDe,0BAAM;AAJ4C,mBAA3B,EAKtB;AAAEC,0BAAM;AAAR,mBALsB,CAFR;;AAAA;AAEjBpB,wBAAMG,UAFW;AAQjB;AACAQ,yBAAO,KAAP,EATiB,CAUjB;;AACAG;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAaD;AAzCM,GAjBI;AA4DbS,aAAW;AACT;;;;AAIAC,OALS,eAKJxB,KALI,EAKG;AACVyB,eAASC,IAAT,CAAcC,SAAd,mBAAmC3B,MAAMG,UAAzC;AACD;AAPQ;AA5DE,CAAf","sourcesContent":["// 设置文件\nimport setting from '@/setting.js'\n\nexport default {\n  namespaced: true,\n  state: {\n    // 主题\n    list: setting.theme.list,\n    // 现在激活的主题 这应该是一个名字 不是对象\n    activeName: setting.theme.list[0].name\n  },\n  getters: {\n    /**\n     * @description 返回当前的主题信息 不是一个名字 而是当前激活主题的所有数据\n     * @param {Object} state vuex state\n     */\n    activeSetting (state) {\n      return state.list.find(theme => theme.name === state.activeName)\n    }\n  },\n  actions: {\n    /**\n     * @description 激活一个主题\n     * @param {Object} state vuex state\n     * @param {String} themeValue 需要激活的主题名称\n     */\n    set ({ state, commit, dispatch }, themeName) {\n      return new Promise(async resolve => {\n        // 检查这个主题在主题列表里是否存在\n        state.activeName = state.list.find(e => e.name === themeName) ? themeName : state.list[0].name\n        // 将 vuex 中的主题应用到 dom\n        commit('dom')\n        // 持久化\n        await dispatch('d2admin/db/set', {\n          dbName: 'sys',\n          path: 'theme.activeName',\n          value: state.activeName,\n          user: true\n        }, { root: true })\n        // end\n        resolve()\n      })\n    },\n    /**\n     * @description 从持久化数据加载主题设置\n     * @param {Object} state vuex state\n     */\n    load ({ state, commit, dispatch }) {\n      return new Promise(async resolve => {\n        // store 赋值\n        state.activeName = await dispatch('d2admin/db/get', {\n          dbName: 'sys',\n          path: 'theme.activeName',\n          defaultValue: state.list[0].name,\n          user: true\n        }, { root: true })\n        // 将 vuex 中的主题应用到 dom\n        commit('dom')\n        // end\n        resolve()\n      })\n    }\n  },\n  mutations: {\n    /**\n     * @description 将 vuex 中的主题应用到 dom\n     * @param {Object} state vuex state\n     */\n    dom (state) {\n      document.body.className = `theme-${state.activeName}`\n    }\n  }\n}\n"]}]}