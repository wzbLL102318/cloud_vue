{"remainingRequest":"/Users/weizhibang/work/cloud_vue/node_modules/babel-loader/lib/index.js!/Users/weizhibang/work/cloud_vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/transition.js","dependencies":[{"path":"/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/transition.js","mtime":1538206615119},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/cache-loader/dist/cjs.js","mtime":1538212059547},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/weizhibang/work/cloud_vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/weizhibang/work/cloud_vue/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n// 设置文件\nimport setting from '@/setting.js';\nexport default {\n  namespaced: true,\n  state: {\n    // 是否开启页面过度动画\n    active: setting.transition.active\n  },\n  actions: {\n    /**\n     * @description 设置开启状态\n     * @param {Object} state vuex state\n     * @param {Boolean} active 新的状态\n     */\n    set: function set(_ref, active) {\n      var state = _ref.state,\n          dispatch = _ref.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // store 赋值\n                  state.active = active; // 持久化\n\n                  _context.next = 3;\n                  return dispatch('d2admin/db/set', {\n                    dbName: 'sys',\n                    path: 'transition.active',\n                    value: state.active,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 3:\n                  // end\n                  resolve();\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\n     * 从数据库读取页面过渡动画设置\n     * @param {Object} state vuex state\n     */\n    load: function load(_ref3) {\n      var state = _ref3.state,\n          dispatch = _ref3.dispatch;\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return dispatch('d2admin/db/get', {\n                    dbName: 'sys',\n                    path: 'transition.active',\n                    defaultValue: setting.transition.active,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 2:\n                  state.active = _context2.sent;\n                  // end\n                  resolve();\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["/Users/weizhibang/work/cloud_vue/src/store/modules/d2admin/modules/transition.js"],"names":["setting","namespaced","state","active","transition","actions","set","dispatch","Promise","resolve","dbName","path","value","user","root","load","defaultValue"],"mappings":";;AAAA;AACA,OAAOA,OAAP,MAAoB,cAApB;AAEA,eAAe;AACbC,cAAY,IADC;AAEbC,SAAO;AACL;AACAC,YAAQH,QAAQI,UAAR,CAAmBD;AAFtB,GAFM;AAMbE,WAAS;AACP;;;;;AAKAC,OANO,qBAMmBH,MANnB,EAM2B;AAAA,UAA3BD,KAA2B,QAA3BA,KAA2B;AAAA,UAApBK,QAAoB,QAApBA,QAAoB;AAChC,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACjB;AACAP,wBAAMC,MAAN,GAAeA,MAAf,CAFiB,CAGjB;;AAHiB;AAAA,yBAIXI,SAAS,gBAAT,EAA2B;AAC/BG,4BAAQ,KADuB;AAE/BC,0BAAM,mBAFyB;AAG/BC,2BAAOV,MAAMC,MAHkB;AAI/BU,0BAAM;AAJyB,mBAA3B,EAKH;AAAEC,0BAAM;AAAR,mBALG,CAJW;;AAAA;AAUjB;AACAL;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAaD,KApBM;;AAqBP;;;;AAIAM,QAzBO,uBAyBoB;AAAA,UAAnBb,KAAmB,SAAnBA,KAAmB;AAAA,UAAZK,QAAY,SAAZA,QAAY;AACzB,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEIF,SAAS,gBAAT,EAA2B;AAC9CG,4BAAQ,KADsC;AAE9CC,0BAAM,mBAFwC;AAG9CK,kCAAchB,QAAQI,UAAR,CAAmBD,MAHa;AAI9CU,0BAAM;AAJwC,mBAA3B,EAKlB;AAAEC,0BAAM;AAAR,mBALkB,CAFJ;;AAAA;AAEjBZ,wBAAMC,MAFW;AAQjB;AACAM;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD;AArCM;AANI,CAAf","sourcesContent":["// 设置文件\nimport setting from '@/setting.js'\n\nexport default {\n  namespaced: true,\n  state: {\n    // 是否开启页面过度动画\n    active: setting.transition.active\n  },\n  actions: {\n    /**\n     * @description 设置开启状态\n     * @param {Object} state vuex state\n     * @param {Boolean} active 新的状态\n     */\n    set ({ state, dispatch }, active) {\n      return new Promise(async resolve => {\n        // store 赋值\n        state.active = active\n        // 持久化\n        await dispatch('d2admin/db/set', {\n          dbName: 'sys',\n          path: 'transition.active',\n          value: state.active,\n          user: true\n        }, { root: true })\n        // end\n        resolve()\n      })\n    },\n    /**\n     * 从数据库读取页面过渡动画设置\n     * @param {Object} state vuex state\n     */\n    load ({ state, dispatch }) {\n      return new Promise(async resolve => {\n        // store 赋值\n        state.active = await dispatch('d2admin/db/get', {\n          dbName: 'sys',\n          path: 'transition.active',\n          defaultValue: setting.transition.active,\n          user: true\n        }, { root: true })\n        // end\n        resolve()\n      })\n    }\n  }\n}\n"]}]}